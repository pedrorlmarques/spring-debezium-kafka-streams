version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-enterprise-kafka:6.0.0
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    depends_on:
      - zookeeper

  debezium-connect:
    image: debezium/connect
    container_name: debezium-connect
    depends_on:
      - zookeeper
      - kafka
    ports:
      - 8083:8083
      - 5005:5005
    environment:
      BOOTSTRAP_SERVERS: kafka:29092
      GROUP_ID: debezium-connect
      CONFIG_STORAGE_TOPIC: __connect-configs
      OFFSET_STORAGE_TOPIC: __connect-offsets
      STATUS_STORAGE_TOPIC: __connect-status
      KAFKA_DEBUG: "true"
      DEBUG_SUSPEND_FLAG: n
      JAVA_DEBUG_PORT: 0.0.0.0:5005

  orders-postgresql:
    image: postgres:12.3
    environment:
      POSTGRES_USER: orders
      POSTGRES_PASSWORD: orders
    ports:
      - 5432:5432
    command: [ "postgres", "-c", "wal_level=logical"]
    volumes:
      - ./src/main/resources/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
    depends_on:
      - debezium-connect
